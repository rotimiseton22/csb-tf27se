{"version":3,"sources":["fetchData.js","components/DeliveryForm.js","components/DeliveryList.js","App.js","index.js"],"names":["useFetch","uri","useState","data","setData","loading","setLoading","error","setError","useEffect","fetch","then","response","json","catch","DeliveryForm","deliveryOrigin","setDeliveryOrigin","deliveryDestination","setDeliveryDestination","locationsLoading","allLocations","locationsError","resourcesLoading","allResources","resourcesError","locations","resources","className","name","value","onChange","e","target","map","location","locationId","filter","resource","lastLocationId","type","id","DeliveryList","allDeliveries","deliveries","scope","delivery","deliveryId","originLocationId","destinationLocationId","resourceIds","length","deliveryStatus","role","checked","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.9e99b679.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport function useFetch(uri) {\n  let [data, setData] = useState(null);\n  let [loading, setLoading] = useState(true);\n  let [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!uri) return;\n\n    fetch(uri)\n      .then((response) => response.json())\n      .then(setData)\n      .then(() => setLoading(false))\n      .catch(setError);\n  }, [uri]);\n\n  return [loading, data, error];\n}\n","import { useState } from \"react\";\nimport { useFetch } from \"../fetchData\";\n\nconst DeliveryForm = () => {\n  //let [allLocations, setAllLocations] = useState([]);\n  //let [resourcesAtLocation, setResourcesAtLocation] = useState([]);\n  let [deliveryOrigin, setDeliveryOrigin] = useState(\"\");\n  let [deliveryDestination, setDeliveryDestination] = useState(\"\");\n\n  let [locationsLoading, allLocations, locationsError] = useFetch(\n    \"./data/locations.json\"\n  );\n\n  let [resourcesLoading, allResources, resourcesError] = useFetch(\n    \"./data/resources.json\"\n  );\n\n  if (locationsLoading || resourcesLoading) return <h1>Retrieving Data....</h1>;\n  if (locationsError || resourcesError)\n    return <pre>{locationsError || resourcesError}</pre>;\n  let { locations } = allLocations;\n  let { resources } = allResources;\n\n  return (\n    <form>\n      <div className=\"mb-3\">\n        <label className=\"form-label\">Origin</label>\n        <select\n          className=\"form-select\"\n          name=\"origin\"\n          value={deliveryOrigin}\n          onChange={(e) => setDeliveryOrigin(e.target.value)}\n        >\n          {locations &&\n            locations.map((location) => (\n              <option key={location.locationId} value={location.locationId}>\n                {location.name}\n              </option>\n            ))}\n        </select>\n\n        <label className=\"form-label\">Destination</label>\n        <select\n          className=\"form-select\"\n          name=\"destination\"\n          value={deliveryDestination}\n          onChange={(e) => setDeliveryDestination(e.target.value)}\n        >\n          {locations &&\n            locations\n              .filter((location) => location.locationId !== deliveryOrigin)\n              .map((location) => (\n                <option key={location.locationId} value={location.locationId}>\n                  {location.name}\n                </option>\n              ))}\n        </select>\n      </div>\n      <div className=\"mb-3\">\n        {resources &&\n          resources\n            .filter((resource) => resource.lastLocationId === deliveryOrigin)\n            .map((resource) => (\n              <div className=\"form-check\">\n                <input\n                  type=\"checkbox\"\n                  value={resource.id}\n                  className=\"form-check-input\"\n                />\n                <label key={resource.id} className=\"form-check-label\">\n                  {resource.id}\n                </label>\n              </div>\n            ))}\n      </div>\n    </form>\n  );\n};\n\nexport default DeliveryForm;\n","import { useFetch } from \"../fetchData\";\n\nconst DeliveryList = () => {\n  let [loading, allDeliveries, error] = useFetch(\"./data/deliveries.json\");\n  if (loading) return <h1>Loading</h1>;\n  if (error) return <pre>{error}</pre>;\n\n  let { deliveries } = allDeliveries;\n\n  return (\n    <table className=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">ID</th>\n          <th scope=\"col\">Origin</th>\n          <th scope=\"col\">Destination</th>\n          <th scope=\"col\"># of Resources</th>\n          <th scope=\"col\">Delivery Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {deliveries &&\n          deliveries.map((delivery) => (\n            <tr key={delivery.deliveryId}>\n              <th>{delivery.deliveryId}</th>\n              <th>{delivery.originLocationId}</th>\n              <th>{delivery.destinationLocationId}</th>\n              <th>{delivery.resourceIds.length}</th>\n              <th>\n                <div className=\"form-check form-switch\">\n                  {delivery.deliveryStatus === \"delivered\" ? (\n                    <input\n                      className=\"form-check-input\"\n                      type=\"checkbox\"\n                      role=\"switch\"\n                      checked\n                    />\n                  ) : (\n                    <input\n                      className=\"form-check-input\"\n                      type=\"checkbox\"\n                      role=\"switch\"\n                    />\n                  )}\n                </div>\n              </th>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DeliveryList;\n","import \"./styles.css\";\nimport DeliveryForm from \"./components/DeliveryForm\";\nimport DeliveryList from \"./components/DeliveryList\";\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <DeliveryForm />\n      <h1>Deliveries</h1>\n      <DeliveryList />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}